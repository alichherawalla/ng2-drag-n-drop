{
  "version": 3,
  "file": "ng2-drag-n-drop.umd.min.js",
  "sources": [
    "ng://ng2-drag-n-drop/node_modules/tslib/tslib.es6.js",
    "ng://ng2-drag-n-drop/out/src/dnd.utils.ts",
    "ng://ng2-drag-n-drop/out/src/dnd.config.ts",
    "ng://ng2-drag-n-drop/out/src/dnd.service.ts",
    "ng://ng2-drag-n-drop/out/src/abstract.component.ts",
    "ng://ng2-drag-n-drop/out/src/draggable.component.ts",
    "ng://ng2-drag-n-drop/out/src/droppable.component.ts",
    "ng://ng2-drag-n-drop/out/src/sortable.component.ts",
    "ng://ng2-drag-n-drop/out/src/dnd.module.ts"
  ],
  "sourcesContent": [
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n",
    "// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\n/**\n * Check and return true if an object is type of string\n */\nexport function isString(obj:any) {\n    return typeof obj === \"string\";\n}\n\n/**\n * Check and return true if an object not undefined or null\n */\nexport function isPresent(obj: any) {\n    return obj !== undefined && obj !== null;\n}\n\n/**\n * Check and return true if an object is type of Function\n */\nexport function isFunction(obj: any) {\n    return typeof obj === \"function\";\n}\n\n/**\n * Create Image element with specified url string\n */\nexport function createImage(src: string) {\n    let img:HTMLImageElement = new HTMLImageElement();\n    img.src = src;\n    return img;\n}\n\n/**\n * Call the function\n */\nexport function callFun(fun: Function) {\n    return fun();\n}",
    "// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport {isString} from './dnd.utils';\n\nexport class DataTransferEffect {\n\n    static COPY = new DataTransferEffect('copy');\n    static LINK = new DataTransferEffect('link');\n    static MOVE = new DataTransferEffect('move');\n    static NONE = new DataTransferEffect('none');\n\n    constructor(public name: string) { }\n}\n\nexport class DragImage {\n    constructor(\n        public imageElement: any,\n        public x_offset: number = 0,\n        public y_offset: number = 0) {\n            if (isString(this.imageElement)) {\n                // Create real image from string source\n                let imgScr: string = <string>this.imageElement;\n                this.imageElement = new HTMLImageElement();\n                (<HTMLImageElement>this.imageElement).src = imgScr;\n            }\n        }\n}\n\nexport class DragDropConfig {\n    public onDragStartClass: string = \"dnd-drag-start\";\n    public onDragEnterClass: string = \"dnd-drag-enter\";\n    public onDragOverClass: string = \"dnd-drag-over\";\n    public onSortableDragClass: string = \"dnd-sortable-drag\";\n\n    public dragEffect: DataTransferEffect = DataTransferEffect.MOVE;\n    public dropEffect: DataTransferEffect = DataTransferEffect.MOVE;\n    public dragCursor: string = \"move\";\n    public dragImage: DragImage;\n    public defaultCursor: string = \"pointer\";\n}",
    "// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport {Injectable, EventEmitter} from '@angular/core';\n\nimport {DragDropConfig} from './dnd.config';\nimport {isPresent} from './dnd.utils';\nimport {SortableContainer} from './sortable.component';\n\nexport class DragDropData {\n    dragData: any;\n    mouseEvent: MouseEvent;\n}\n\nexport function dragDropServiceFactory(): DragDropService  {\n    return new DragDropService();\n}\n\n@Injectable()\nexport class DragDropService {\n    allowedDropZones: Array<string> = [];\n    onDragSuccessCallback: EventEmitter<DragDropData>;\n    dragData: any;\n    isDragged: boolean;\n}\n\nexport function dragDropSortableServiceFactory(config: DragDropConfig): DragDropSortableService  {\n    return new DragDropSortableService(config);\n}\n\n@Injectable()\nexport class DragDropSortableService {\n    index: number;\n    sortableContainer: SortableContainer;\n    isDragged: boolean;\n\n    private _elem: HTMLElement;\n    public get elem(): HTMLElement {\n        return this._elem;\n    }\n\n    constructor(private _config:DragDropConfig) {}\n\n    markSortable(elem: HTMLElement) {\n        if (isPresent(this._elem)) {\n            this._elem.classList.remove(this._config.onSortableDragClass);\n        }\n        if (isPresent(elem)) {\n            this._elem = elem;\n            this._elem.classList.add(this._config.onSortableDragClass);\n        }\n    }\n}\n",
    "// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport {Injectable, ChangeDetectorRef, ViewRef} from '@angular/core';\nimport {ElementRef} from '@angular/core';\n\nimport { DragDropConfig, DragImage } from './dnd.config';\nimport { DragDropService } from './dnd.service';\nimport { isString, isFunction, isPresent, createImage, callFun } from './dnd.utils';\n\n@Injectable()\nexport abstract class AbstractComponent {\n    _elem: HTMLElement;\n    _dragHandle: HTMLElement;\n    _dragHelper: HTMLElement;\n    _defaultCursor: string;\n\n    /**\n     * Last element that was mousedown'ed\n     */\n    _target: EventTarget;\n\n    /**\n     * Whether the object is draggable. Default is true.\n     */\n    private _dragEnabled: boolean = false;\n    set dragEnabled(enabled: boolean) {\n        this._dragEnabled = !!enabled;\n        this._elem.draggable = this._dragEnabled;\n    }\n    get dragEnabled(): boolean {\n        return this._dragEnabled;\n    }\n\n    /**\n     * Allows drop on this element\n     */\n    dropEnabled: boolean = false;\n    /**\n     * Drag effect\n     */\n    effectAllowed: string;\n    /**\n     * Drag cursor\n     */\n    effectCursor: string;\n\n    /**\n     * Restrict places where a draggable element can be dropped. Either one of\n     * these two mechanisms can be used:\n     *\n     * - dropZones: an array of strings that permits to specify the drop zones\n     *   associated with this component. By default, if the drop-zones attribute\n     *   is not specified, the droppable component accepts drop operations by\n     *   all the draggable components that do not specify the allowed-drop-zones\n     *\n     * - allowDrop: a boolean function for droppable components, that is checked\n     *   when an item is dragged. The function is passed the dragData of this\n     *   item.\n     *   - if it returns true, the item can be dropped in this component\n     *   - if it returns false, the item cannot be dropped here\n     */\n    allowDrop: (dropData: any) => boolean;\n    dropZones: string[] = [];\n\n    /**\n     * Here is the property dragImage you can use:\n     * - The string value as url to the image\n     *   <div class=\"panel panel-default\"\n     *        dnd-draggable [dragEnabled]=\"true\"\n     *        [dragImage]=\"/images/simpler.png\">\n     * ...\n     * - The DragImage value with Image and optional offset by x and y:\n     *   let myDragImage: DragImage = new DragImage(\"/images/simpler1.png\", 0, 0);\n     * ...\n     *   <div class=\"panel panel-default\"\n     *        dnd-draggable [dragEnabled]=\"true\"\n     *        [dragImage]=\"myDragImage\">\n     * ...\n     * - The custom function to return the value of dragImage programmatically:\n     *   <div class=\"panel panel-default\"\n     *        dnd-draggable [dragEnabled]=\"true\"\n     *        [dragImage]=\"getDragImage(someData)\">\n     * ...\n     *   getDragImage(value:any): string {\n     *     return value ? \"/images/simpler1.png\" : \"/images/simpler2.png\"\n     *   }\n     */\n    dragImage: string | DragImage | Function;\n\n    cloneItem: boolean = false;\n\n    constructor(elemRef: ElementRef, public _dragDropService: DragDropService, public _config: DragDropConfig,\n        private _cdr: ChangeDetectorRef) {\n\n        // Assign default cursor unless overridden\n        this._defaultCursor = _config.defaultCursor;\n        this._elem = elemRef.nativeElement;\n        this._elem.style.cursor = this._defaultCursor;  // set default cursor on our element\n        //\n        // DROP events\n        //\n        this._elem.ondragenter = (event: Event) => {\n            this._onDragEnter(event);\n        };\n        this._elem.ondragover = (event: DragEvent) => {\n            this._onDragOver(event);\n            //\n            if (event.dataTransfer != null) {\n                event.dataTransfer.dropEffect = this._config.dropEffect.name;\n            }\n\n            return false;\n        };\n        this._elem.ondragleave = (event: Event) => {\n            this._onDragLeave(event);\n        };\n        this._elem.ondrop = (event: Event) => {\n            this._onDrop(event);\n        };\n        //\n        // Drag events\n        //\n        this._elem.onmousedown = (event: MouseEvent) => {\n            this._target = event.target;\n        };\n        this._elem.ondragstart = (event: DragEvent) => {\n            if (this._dragHandle) {\n                if (!this._dragHandle.contains(<Element>this._target)) {\n                    event.preventDefault();\n                    return;\n                }\n            }\n\n            this._onDragStart(event);\n            //\n            if (event.dataTransfer != null) {\n                event.dataTransfer.setData('text', '');\n                // Change drag effect\n                event.dataTransfer.effectAllowed = this.effectAllowed || this._config.dragEffect.name;\n                // Change drag image\n                if (isPresent(this.dragImage)) {\n                    if (isString(this.dragImage)) {\n                        (<any>event.dataTransfer).setDragImage(createImage(<string>this.dragImage));\n                    } else if (isFunction(this.dragImage)) {\n                        (<any>event.dataTransfer).setDragImage(callFun(<Function>this.dragImage));\n                    } else {\n                        let img: DragImage = <DragImage>this.dragImage;\n                        (<any>event.dataTransfer).setDragImage(img.imageElement, img.x_offset, img.y_offset);\n                    }\n                } else if (isPresent(this._config.dragImage)) {\n                    let dragImage: DragImage = this._config.dragImage;\n                    (<any>event.dataTransfer).setDragImage(dragImage.imageElement, dragImage.x_offset, dragImage.y_offset);\n                } else if (this.cloneItem) {\n                    this._dragHelper = <HTMLElement>this._elem.cloneNode(true);\n                    this._dragHelper.classList.add('dnd-drag-item');\n                    this._dragHelper.style.position = \"absolute\";\n                    this._dragHelper.style.top = \"0px\";\n                    this._dragHelper.style.left = \"-1000px\";\n                    this._elem.parentElement.appendChild(this._dragHelper);\n                    (<any>event.dataTransfer).setDragImage(this._dragHelper, event.offsetX, event.offsetY);\n                }\n\n                // Change drag cursor\n                let cursorelem = (this._dragHandle) ? this._dragHandle : this._elem;\n\n                if (this._dragEnabled) {\n                    cursorelem.style.cursor = this.effectCursor ? this.effectCursor : this._config.dragCursor;\n                } else {\n                    cursorelem.style.cursor = this._defaultCursor;\n                }\n            }\n        };\n\n        this._elem.ondragend = (event: Event) => {\n            if (this._elem.parentElement && this._dragHelper) {\n                this._elem.parentElement.removeChild(this._dragHelper);\n            }\n            // console.log('ondragend', event.target);\n            this._onDragEnd(event);\n            // Restore style of dragged element\n            let cursorelem = (this._dragHandle) ? this._dragHandle : this._elem;\n            cursorelem.style.cursor = this._defaultCursor;\n        };\n    }\n\n    public setDragHandle(elem: HTMLElement) {\n        this._dragHandle = elem;\n    }\n    /******* Change detection ******/\n\n    detectChanges () {\n        // Programmatically run change detection to fix issue in Safari\n        setTimeout(() => {\n            if ( this._cdr && !(this._cdr as ViewRef).destroyed ) {\n                this._cdr.detectChanges();\n            }\n        }, 250);\n    }\n\n    //****** Droppable *******//\n    private _onDragEnter(event: Event): void {\n        // console.log('ondragenter._isDropAllowed', this._isDropAllowed);\n        if (this._isDropAllowed(event)) {\n            // event.preventDefault();\n            this._onDragEnterCallback(event);\n        }\n    }\n\n    private _onDragOver(event: Event) {\n        // // console.log('ondragover._isDropAllowed', this._isDropAllowed);\n        if (this._isDropAllowed(event)) {\n            // The element is over the same source element - do nothing\n            if (event.preventDefault) {\n                // Necessary. Allows us to drop.\n                event.preventDefault();\n            }\n\n            this._onDragOverCallback(event);\n        }\n    }\n\n    private _onDragLeave(event: Event): void {\n        // console.log('ondragleave._isDropAllowed', this._isDropAllowed);\n        if (this._isDropAllowed(event)) {\n            // event.preventDefault();\n            this._onDragLeaveCallback(event);\n        }\n    }\n\n    private _onDrop(event: Event): void {\n        // console.log('ondrop._isDropAllowed', this._isDropAllowed);\n        if (this._isDropAllowed(event)) {\n            // Necessary. Allows us to drop.\n            this._preventAndStop(event);\n\n            this._onDropCallback(event);\n\n            this.detectChanges();\n        }\n    }\n\n    private _isDropAllowed(event: any): boolean {\n        if ((this._dragDropService.isDragged || (event.dataTransfer && event.dataTransfer.files)) && this.dropEnabled) {\n            // First, if `allowDrop` is set, call it to determine whether the\n            // dragged element can be dropped here.\n            if (this.allowDrop) {\n                return this.allowDrop(this._dragDropService.dragData);\n            }\n\n            // Otherwise, use dropZones if they are set.\n            if (this.dropZones.length === 0 && this._dragDropService.allowedDropZones.length === 0) {\n                return true;\n            }\n            for (let i: number = 0; i < this._dragDropService.allowedDropZones.length; i++) {\n                let dragZone: string = this._dragDropService.allowedDropZones[i];\n                if (this.dropZones.indexOf(dragZone) !== -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    private _preventAndStop(event: Event): any {\n        if (event.preventDefault) {\n            event.preventDefault();\n        }\n        if (event.stopPropagation) {\n            event.stopPropagation();\n        }\n    }\n\n    //*********** Draggable **********//\n\n    private _onDragStart(event: Event): void {\n        //console.log('ondragstart.dragEnabled', this._dragEnabled);\n        if (this._dragEnabled) {\n            this._dragDropService.allowedDropZones = this.dropZones;\n            // console.log('ondragstart.allowedDropZones', this._dragDropService.allowedDropZones);\n            this._onDragStartCallback(event);\n        }\n    }\n\n    private _onDragEnd(event: Event): void {\n        this._dragDropService.allowedDropZones = [];\n        // console.log('ondragend.allowedDropZones', this._dragDropService.allowedDropZones);\n        this._onDragEndCallback(event);\n    }\n\n    //**** Drop Callbacks ****//\n    _onDragEnterCallback(event: Event) { }\n    _onDragOverCallback(event: Event) { }\n    _onDragLeaveCallback(event: Event) { }\n    _onDropCallback(event: Event) { }\n\n    //**** Drag Callbacks ****//\n    _onDragStartCallback(event: Event) { }\n    _onDragEndCallback(event: Event) { }\n}\n\nexport class AbstractHandleComponent {\n    _elem: HTMLElement;\n    constructor(elemRef: ElementRef, public _dragDropService: DragDropService, public _config: DragDropConfig,\n        private _Component: AbstractComponent, private _cdr: ChangeDetectorRef) {\n        this._elem = elemRef.nativeElement;\n        this._Component.setDragHandle(this._elem);\n    }\n}\n",
    "// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport {ChangeDetectorRef} from '@angular/core';\nimport {Directive, Input, Output, EventEmitter, ElementRef} from '@angular/core';\n\nimport {AbstractComponent, AbstractHandleComponent} from './abstract.component';\nimport {DragDropConfig, DragImage} from './dnd.config';\nimport {DragDropService, DragDropData} from './dnd.service';\n\n@Directive({ selector: '[dnd-draggable]' })\nexport class DraggableComponent extends AbstractComponent {\n\n    @Input(\"dragEnabled\") set draggable(value:boolean) {\n        this.dragEnabled = !!value;\n    }\n\n    /**\n     * Callback function called when the drag actions happened.\n     */\n    @Output() onDragStart: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\n    @Output() onDragEnd: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\n\n    /**\n     * The data that has to be dragged. It can be any JS object\n     */\n    @Input() dragData: any;\n\n    /**\n     * Callback function called when the drag action ends with a valid drop action.\n     * It is activated after the on-drop-success callback\n     */\n    @Output(\"onDragSuccess\") onDragSuccessCallback: EventEmitter<any> = new EventEmitter<any>();\n\n    @Input(\"dropZones\") set dropzones(value:Array<string>) {\n        this.dropZones = value;\n    }\n\n    /**\n     * Drag allowed effect\n     */\n    @Input(\"effectAllowed\") set effectallowed(value: string) {\n        this.effectAllowed = value;\n    }\n\n    /**\n     * Drag effect cursor\n     */\n    @Input(\"effectCursor\") set effectcursor(value: string) {\n        this.effectCursor = value;\n    }\n\n    /**\n     * Here is the property dragImage you can use:\n     * - The string value as url to the image\n     *   <div class=\"panel panel-default\"\n     *        dnd-draggable [dragEnabled]=\"true\"\n     *        [dragImage]=\"/images/simpler.png\">\n     * ...\n     * - The DragImage value with Image and offset by x and y:\n     *   let myDragImage: DragImage = new DragImage(\"/images/simpler1.png\", 0, 0);\n     * ...\n     *   <div class=\"panel panel-default\"\n     *        dnd-draggable [dragEnabled]=\"true\"\n     *        [dragImage]=\"myDragImage\">\n     * ...\n     * - The custom function to return the value of dragImage programmatically:\n     *   <div class=\"panel panel-default\"\n     *        dnd-draggable [dragEnabled]=\"true\"\n     *        [dragImage]=\"getDragImage(someData)\">\n     * ...\n     *   getDragImage(value:any): string {\n     *     return value ? \"/images/simpler1.png\" : \"/images/simpler2.png\"\n     *   }\n     */\n    @Input() dragImage: string | DragImage | Function;\n\n    \n    @Input() cloneItem: boolean;\n\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig,\n        cdr:ChangeDetectorRef) {\n\n        super(elemRef, dragDropService, config, cdr);\n        this._defaultCursor = this._elem.style.cursor;\n        this.dragEnabled = true;\n    }\n\n    _onDragStartCallback(event: MouseEvent) {\n        this._dragDropService.isDragged = true;\n        this._dragDropService.dragData = this.dragData;\n        this._dragDropService.onDragSuccessCallback = this.onDragSuccessCallback;\n        this._elem.classList.add(this._config.onDragStartClass);\n        //\n        this.onDragStart.emit({dragData: this.dragData, mouseEvent: event});\n    }\n\n    _onDragEndCallback(event: MouseEvent) {\n        this._dragDropService.isDragged = false;\n        this._dragDropService.dragData = null;\n        this._dragDropService.onDragSuccessCallback = null;\n        this._elem.classList.remove(this._config.onDragStartClass);\n        //\n        this.onDragEnd.emit({dragData: this.dragData, mouseEvent: event});\n    }\n}\n\n\n@Directive({ selector: '[dnd-draggable-handle]' })\nexport class DraggableHandleComponent extends AbstractHandleComponent {\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig, _Component: DraggableComponent,\n        cdr:ChangeDetectorRef) {\n\n        super(elemRef, dragDropService, config, _Component, cdr);\n    }\n}\n",
    "// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport {ChangeDetectorRef} from '@angular/core';\nimport {Directive, Input, Output, EventEmitter, ElementRef} from '@angular/core';\n\nimport {AbstractComponent} from './abstract.component';\nimport {DragDropConfig} from './dnd.config';\nimport {DragDropService, DragDropData} from './dnd.service';\n\n@Directive({ selector: '[dnd-droppable]' })\nexport class DroppableComponent extends AbstractComponent {\n\n    @Input(\"dropEnabled\") set droppable(value:boolean) {\n        this.dropEnabled = !!value;\n    }\n\n    /**\n     * Callback function called when the drop action completes correctly.\n     * It is activated before the on-drag-success callback.\n     */\n    @Output() onDropSuccess: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\n    @Output() onDragEnter: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\n    @Output() onDragOver: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\n    @Output() onDragLeave: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\n\n    @Input(\"allowDrop\") set allowdrop(value: (dropData: any) => boolean) {\n        this.allowDrop = value;\n    }\n\n    @Input(\"dropZones\") set dropzones(value:Array<string>) {\n        this.dropZones = value;\n    }\n\n    /**\n     * Drag allowed effect\n     */\n    @Input(\"effectAllowed\") set effectallowed(value: string) {\n        this.effectAllowed = value;\n    }\n\n    /**\n     * Drag effect cursor\n     */\n    @Input(\"effectCursor\") set effectcursor(value: string) {\n        this.effectCursor = value;\n    }\n\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig,\n        cdr:ChangeDetectorRef) {\n\n        super(elemRef, dragDropService, config, cdr);\n\n        this.dropEnabled = true;\n    }\n\n    _onDragEnterCallback(event: MouseEvent) {\n        if (this._dragDropService.isDragged) {\n            this._elem.classList.add(this._config.onDragEnterClass);\n            this.onDragEnter.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\n        }\n    }\n\n    _onDragOverCallback (event: MouseEvent) {\n        if (this._dragDropService.isDragged) {\n            this._elem.classList.add(this._config.onDragOverClass);\n            this.onDragOver.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\n        }\n    };\n\n    _onDragLeaveCallback (event: MouseEvent) {\n        if (this._dragDropService.isDragged) {\n            this._elem.classList.remove(this._config.onDragOverClass);\n            this._elem.classList.remove(this._config.onDragEnterClass);\n            this.onDragLeave.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\n        }\n    };\n\n    _onDropCallback (event: MouseEvent) {\n        let dataTransfer = (event as any).dataTransfer;\n        if (this._dragDropService.isDragged || (dataTransfer && dataTransfer.files)) {\n            this.onDropSuccess.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\n            if (this._dragDropService.onDragSuccessCallback) {\n                this._dragDropService.onDragSuccessCallback.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\n            }\n            this._elem.classList.remove(this._config.onDragOverClass);\n            this._elem.classList.remove(this._config.onDragEnterClass);\n        }\n    }\n}\n",
    "// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport {ChangeDetectorRef} from '@angular/core';\nimport {Directive, Input, Output, EventEmitter, ElementRef} from '@angular/core';\nimport {FormArray} from '@angular/forms';\n\nimport {AbstractComponent, AbstractHandleComponent} from './abstract.component';\nimport {DragDropConfig} from './dnd.config';\nimport {DragDropService, DragDropSortableService} from './dnd.service';\n\n@Directive({ selector: '[dnd-sortable-container]' })\nexport class SortableContainer extends AbstractComponent {\n\n    @Input(\"dragEnabled\") set draggable(value:boolean) {\n        this.dragEnabled = !!value;\n    }\n\n    private _sortableData: Array<any>|FormArray = [];\n    private sortableHandler: SortableFormArrayHandler|SortableArrayHandler;\n\n    @Input() set sortableData(sortableData: Array<any>|FormArray) {\n        this._sortableData = sortableData;\n        if (sortableData instanceof FormArray) {\n            this.sortableHandler = new SortableFormArrayHandler();\n        } else {\n            this.sortableHandler = new SortableArrayHandler();\n        }\n        //\n        this.dropEnabled = !!this._sortableData;\n        // console.log(\"collection is changed, drop enabled: \" + this.dropEnabled);\n    }\n    get sortableData(): Array<any>|FormArray {\n        return this._sortableData;\n    }\n\n    @Input(\"dropZones\") set dropzones(value:Array<string>) {\n        this.dropZones = value;\n    }\n\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig, cdr:ChangeDetectorRef,\n        private _sortableDataService: DragDropSortableService) {\n\n        super(elemRef, dragDropService, config, cdr);\n        this.dragEnabled = false;\n    }\n\n    _onDragEnterCallback(event: Event) {\n        if (this._sortableDataService.isDragged) {\n            let item:any = this._sortableDataService.sortableContainer.getItemAt(this._sortableDataService.index);\n            // Check does element exist in sortableData of this Container\n            if (this.indexOf(item) === -1) {\n                // Let's add it\n                // console.log('Container._onDragEnterCallback. drag node [' + this._sortableDataService.index.toString() + '] over parent node');\n                // Remove item from previouse list\n                this._sortableDataService.sortableContainer.removeItemAt(this._sortableDataService.index);\n                if (this._sortableDataService.sortableContainer._sortableData.length === 0) {\n                    this._sortableDataService.sortableContainer.dropEnabled = true;\n                }\n                // Add item to new list\n                this.insertItemAt(item, 0);\n                this._sortableDataService.sortableContainer = this;\n                this._sortableDataService.index = 0;\n            }\n            // Refresh changes in properties of container component\n            this.detectChanges();\n        }\n    }\n\n    getItemAt(index: number): any {\n        return this.sortableHandler.getItemAt(this._sortableData, index);\n    }\n\n    indexOf(item: any): number {\n        return this.sortableHandler.indexOf(this._sortableData, item);\n    }\n\n    removeItemAt(index: number): void {\n        this.sortableHandler.removeItemAt(this._sortableData, index);\n    }\n\n    insertItemAt(item: any, index: number) {\n        this.sortableHandler.insertItemAt(this._sortableData, item, index);\n    }\n    replaceItemAt(item: any, index: number) {\n        this.sortableHandler.replaceItemAt(this._sortableData, item, index);\n    }\n}\n\nclass SortableArrayHandler {\n    getItemAt(sortableData: any, index: number): any {\n        return sortableData[index];\n    }\n\n    indexOf(sortableData: any, item: any): number {\n        return sortableData.indexOf(item);\n    }\n\n    removeItemAt(sortableData: any, index: number) {\n        sortableData.splice(index, 1);\n    }\n\n    insertItemAt(sortableData: any, item: any, index: number) {\n        sortableData.splice(index, 0, item);\n    }\n    replaceItemAt(sortableData: any, item: any, index: number) {\n        sortableData.splice(index, 1, item);\n    }\n}\n\nclass SortableFormArrayHandler {\n    getItemAt(sortableData: any, index: number): any {\n        return sortableData.at(index);\n    }\n\n    indexOf(sortableData: any, item: any): number {\n        return sortableData.controls.indexOf(item);\n    }\n\n    removeItemAt(sortableData: any, index: number) {\n        sortableData.removeAt(index);\n    }\n\n    insertItemAt(sortableData: any, item: any, index: number) {\n        sortableData.insert(index, item);\n    }\n\n    replaceItemAt(sortableData: any, item: any, index: number) {\n        sortableData.setControl(index, item);\n    }\n}\n\n@Directive({ selector: '[dnd-sortable]' })\nexport class SortableComponent extends AbstractComponent {\n\n    @Input('sortableIndex') index: number;\n\n    @Input(\"dragEnabled\") set draggable(value:boolean) {\n        this.dragEnabled = !!value;\n    }\n\n    @Input(\"dropEnabled\") set droppable(value:boolean) {\n        this.dropEnabled = !!value;\n    }\n\n    /**\n     * The data that has to be dragged. It can be any JS object\n     */\n    @Input() dragData: any;\n\n    /**\n     * Drag allowed effect\n     */\n    @Input(\"effectAllowed\") set effectallowed(value: string) {\n        this.effectAllowed = value;\n    }\n\n    /**\n     * Drag effect cursor\n     */\n    @Input(\"effectCursor\") set effectcursor(value: string) {\n        this.effectCursor = value;\n    }\n\n    /**\n     * Callback function called when the drag action ends with a valid drop action.\n     * It is activated after the on-drop-success callback\n     */\n    @Output(\"onDragSuccess\") onDragSuccessCallback: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output(\"onDragStart\") onDragStartCallback: EventEmitter<any> = new EventEmitter<any>();\n    @Output(\"onDragOver\") onDragOverCallback: EventEmitter<any> = new EventEmitter<any>();\n    @Output(\"onDragEnd\") onDragEndCallback: EventEmitter<any> = new EventEmitter<any>();\n    @Output(\"onDropSuccess\") onDropSuccessCallback: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig,\n        private _sortableContainer: SortableContainer,\n        private _sortableDataService: DragDropSortableService,\n        cdr:ChangeDetectorRef) {\n        super(elemRef, dragDropService, config, cdr);\n        this.dropZones = this._sortableContainer.dropZones;\n        this.dragEnabled = true;\n        this.dropEnabled = true;\n    }\n\n    _onDragStartCallback(event: Event) {\n        // console.log('_onDragStartCallback. dragging elem with index ' + this.index);\n        this._sortableDataService.isDragged = true;\n        this._sortableDataService.sortableContainer = this._sortableContainer;\n        this._sortableDataService.index = this.index;\n        this._sortableDataService.markSortable(this._elem);\n        // Add dragData\n        this._dragDropService.isDragged = true;\n        this._dragDropService.dragData = this.dragData;\n        this._dragDropService.onDragSuccessCallback = this.onDragSuccessCallback;\n        //\n        this.onDragStartCallback.emit(this._dragDropService.dragData);\n    }\n\n    _onDragOverCallback(event: Event) {\n        if (this._sortableDataService.isDragged) {\n            // console.log('_onDragOverCallback. dragging elem with index ' + this.index);\n            this._sortableDataService.sortableContainer = this._sortableContainer;\n            this._sortableDataService.index = this.index;\n            this._sortableDataService.markSortable(this._elem);\n            this._sortableContainer._elem.classList.add(this._config.onDragOverClass);\n            if (this._dragDropService.dragData instanceof Array) {\n                if (this._dragDropService.dragData[0] !== this._sortableContainer.getItemAt(this.index)) {\n                    const temp = this._sortableContainer.getItemAt(this.index);\n                    const tempIndex = this._sortableContainer.indexOf(this._dragDropService.dragData[0]);\n                    this._sortableContainer.replaceItemAt(this._dragDropService.dragData[0], this.index);\n                    console.log(this._sortableContainer.sortableData);\n                    this._sortableContainer.replaceItemAt(temp, tempIndex);\n                }\n            }\n            const sortableItem = {index: this._sortableDataService.index, dragData: this._dragDropService.dragData};\n            this.onDragOverCallback.emit(sortableItem);\n        }\n    }\n\n    _onDragEndCallback(event: Event) {\n        // console.log('_onDragEndCallback. end dragging elem with index ' + this.index);\n        this._sortableDataService.isDragged = false;\n        this._sortableDataService.sortableContainer = null;\n        this._sortableDataService.index = null;\n        this._sortableDataService.markSortable(null);\n        // Add dragGata\n        this._dragDropService.isDragged = false;\n        this._dragDropService.dragData = null;\n        this._dragDropService.onDragSuccessCallback = null;\n        this._sortableContainer._elem.classList.remove(this._config.onDragOverClass);\n        //\n        this.onDragEndCallback.emit(this._dragDropService.dragData);\n    }\n\n    _onDragEnterCallback(event: Event) {\n        if (this._sortableDataService.isDragged) {\n            this._sortableDataService.markSortable(this._elem);\n            if ((this.index !== this._sortableDataService.index) ||\n                (this._sortableDataService.sortableContainer.sortableData !== this._sortableContainer.sortableData)) {\n                // console.log('Component._onDragEnterCallback. drag node [' + this.index + '] over node [' + this._sortableDataService.index + ']');\n                // Get item\n                let item:any = this._sortableDataService.sortableContainer.getItemAt(this._sortableDataService.index);\n                // Remove item from previous list\n                this._sortableDataService.sortableContainer.removeItemAt(this._sortableDataService.index);\n                if (this._sortableDataService.sortableContainer.sortableData.length === 0) {\n                    this._sortableDataService.sortableContainer.dropEnabled = true;\n                }\n                // Add item to new list\n                this._sortableContainer.insertItemAt(item, this.index);\n                if (this._sortableContainer.dropEnabled) {\n                    this._sortableContainer.dropEnabled = false;\n                }\n                this._sortableDataService.sortableContainer = this._sortableContainer;\n                this._sortableDataService.index = this.index;\n                this.detectChanges();\n            }\n        }\n    }\n\n    _onDropCallback (event: Event) {\n        if (this._sortableDataService.isDragged) {\n            // console.log('onDropCallback.onDropSuccessCallback.dragData', this._dragDropService.dragData);\n            this.onDropSuccessCallback.emit(this._dragDropService.dragData);\n            if (this._dragDropService.onDragSuccessCallback) {\n                // console.log('onDropCallback.onDragSuccessCallback.dragData', this._dragDropService.dragData);\n                this._dragDropService.onDragSuccessCallback.emit(this._dragDropService.dragData);\n            }\n            // Refresh changes in properties of container component\n            this._sortableContainer.detectChanges();\n        }\n    }\n}\n\n@Directive({ selector: '[dnd-sortable-handle]' })\nexport class SortableHandleComponent extends AbstractHandleComponent {\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig, _Component: SortableComponent,\n        cdr:ChangeDetectorRef) {\n\n        super(elemRef, dragDropService, config, _Component, cdr);\n    }\n}\n",
    "// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport { NgModule, ModuleWithProviders } from \"@angular/core\";\n\nimport {DragDropConfig} from './dnd.config';\nimport {DragDropService, DragDropSortableService, dragDropServiceFactory, dragDropSortableServiceFactory} from './dnd.service';\nimport {DraggableComponent, DraggableHandleComponent} from './draggable.component';\nimport {DroppableComponent} from './droppable.component';\nimport {SortableContainer, SortableComponent, SortableHandleComponent} from './sortable.component';\n\nexport * from './abstract.component';\nexport * from './dnd.config';\nexport * from './dnd.service';\nexport * from './draggable.component';\nexport * from './droppable.component';\nexport * from './sortable.component';\n\nexport let providers = [\n    DragDropConfig,\n    { provide: DragDropService, useFactory: dragDropServiceFactory },\n    { provide: DragDropSortableService, useFactory: dragDropSortableServiceFactory, deps: [DragDropConfig] }\n];\n\n@NgModule({\n  declarations: [DraggableComponent, DraggableHandleComponent, DroppableComponent, SortableContainer, SortableComponent, SortableHandleComponent],\n  exports : [DraggableComponent, DraggableHandleComponent, DroppableComponent, SortableContainer, SortableComponent, SortableHandleComponent],\n\n})\nexport class DndModule {\n  static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: DndModule,\n            providers: providers\n        };\n    }\n}\n"
  ],
  "names": [
    "extendStatics",
    "d",
    "b",
    "Object",
    "setPrototypeOf",
    "__proto__",
    "Array",
    "p",
    "hasOwnProperty",
    "__extends",
    "__",
    "this",
    "constructor",
    "prototype",
    "create",
    "isString",
    "obj",
    "isPresent",
    "undefined",
    "DataTransferEffect",
    "name",
    "COPY",
    "LINK",
    "MOVE",
    "NONE",
    "DragImage",
    "imageElement",
    "x_offset",
    "y_offset",
    "imgScr",
    "HTMLImageElement",
    "src",
    "DragDropConfig",
    "onDragStartClass",
    "onDragEnterClass",
    "onDragOverClass",
    "onSortableDragClass",
    "dragEffect",
    "dropEffect",
    "dragCursor",
    "defaultCursor",
    "DragDropData",
    "dragDropServiceFactory",
    "DragDropService",
    "allowedDropZones",
    "dragDropSortableServiceFactory",
    "config",
    "DragDropSortableService",
    "type",
    "Injectable",
    "_config",
    "defineProperty",
    "get",
    "_elem",
    "markSortable",
    "elem",
    "classList",
    "remove",
    "add",
    "AbstractComponent",
    "elemRef",
    "_dragDropService",
    "_cdr",
    "_this",
    "_dragEnabled",
    "dropEnabled",
    "dropZones",
    "cloneItem",
    "_defaultCursor",
    "nativeElement",
    "style",
    "cursor",
    "ondragenter",
    "event",
    "_onDragEnter",
    "ondragover",
    "_onDragOver",
    "dataTransfer",
    "ondragleave",
    "_onDragLeave",
    "ondrop",
    "_onDrop",
    "onmousedown",
    "_target",
    "target",
    "ondragstart",
    "_dragHandle",
    "contains",
    "_onDragStart",
    "setData",
    "effectAllowed",
    "dragImage",
    "setDragImage",
    "createImage",
    "img",
    "isFunction",
    "callFun",
    "fun",
    "_dragHelper",
    "cloneNode",
    "position",
    "top",
    "left",
    "parentElement",
    "appendChild",
    "offsetX",
    "offsetY",
    "cursorelem",
    "effectCursor",
    "preventDefault",
    "ondragend",
    "removeChild",
    "_onDragEnd",
    "set",
    "enabled",
    "draggable",
    "setDragHandle",
    "detectChanges",
    "setTimeout",
    "destroyed",
    "_isDropAllowed",
    "_onDragEnterCallback",
    "_onDragOverCallback",
    "_onDragLeaveCallback",
    "_preventAndStop",
    "_onDropCallback",
    "isDragged",
    "files",
    "allowDrop",
    "dragData",
    "length",
    "i",
    "dragZone",
    "indexOf",
    "stopPropagation",
    "_onDragStartCallback",
    "_onDragEndCallback",
    "ElementRef",
    "ChangeDetectorRef",
    "AbstractHandleComponent",
    "_Component",
    "DraggableComponent",
    "_super",
    "dragDropService",
    "cdr",
    "call",
    "onDragStart",
    "EventEmitter",
    "onDragEnd",
    "onDragSuccessCallback",
    "dragEnabled",
    "tslib_1.__extends",
    "value",
    "emit",
    "mouseEvent",
    "Directive",
    "args",
    "selector",
    "Input",
    "Output",
    "dropzones",
    "effectallowed",
    "effectcursor",
    "DraggableHandleComponent",
    "DroppableComponent",
    "onDropSuccess",
    "onDragEnter",
    "onDragOver",
    "onDragLeave",
    "droppable",
    "allowdrop",
    "SortableContainer",
    "_sortableDataService",
    "_sortableData",
    "sortableData",
    "FormArray",
    "sortableHandler",
    "SortableFormArrayHandler",
    "SortableArrayHandler",
    "item",
    "sortableContainer",
    "getItemAt",
    "index",
    "removeItemAt",
    "insertItemAt",
    "replaceItemAt",
    "splice",
    "at",
    "controls",
    "removeAt",
    "insert",
    "setControl",
    "SortableComponent",
    "_sortableContainer",
    "onDragStartCallback",
    "onDragOverCallback",
    "onDragEndCallback",
    "onDropSuccessCallback",
    "temp",
    "tempIndex",
    "console",
    "log",
    "sortableItem",
    "SortableHandleComponent",
    "providers",
    "provide",
    "useFactory",
    "deps",
    "DndModule",
    "forRoot",
    "ngModule",
    "NgModule",
    "declarations",
    "exports"
  ],
  "mappings": "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"
}
